// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.0.x"]
  // binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Sample {
  id             String   @id
  cpk            String // コマンド用PK
  csk            String // コマンド用SK
  pk             String // データ用PK, SAMPLE#tenantCode (テナントコード)
  sk             String // データ用SK, マスタ種別コード#マスタコード
  tenantCode     String   @map("tenant_code") // テナントコード, 【テナントコードマスタ】
  seq            Int      @default(0) // 並び順, 採番機能を使用する
  code           String // レコードのコード, マスタ種別コード#マスタコード
  name           String // レコード名, 名前
  version        Int // バージョン
  isDeleted      Boolean  @default(false) @map("is_deleted") // 削除フラグ
  createdBy      String   @default("") @map("created_by") // 作成者
  createdIp      String   @default("") @map("created_ip") // 作成IP, IPv6も考慮する
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(0) // 作成日時
  updatedBy      String   @default("") @map("updated_by") // 更新者
  updatedIp      String   @default("") @map("updated_ip") // 更新IP, IPv6も考慮する
  updatedAt      DateTime @updatedAt @map("updated_at") @db.Timestamp(0) // 更新日時

  attributes Json? @map("attributes")

  @@unique([cpk, csk])
  @@unique([pk, sk])
  @@unique([tenantCode, code])
  @@index([tenantCode, name])
  @@map("samples")
}
