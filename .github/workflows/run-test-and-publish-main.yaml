name: Run test and publish

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: read
  checks: write

jobs:
  unit_tests:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: |
          # 
          #
          #
          
          cp packages/master/package.json packages/master/package.json.bak
          cp packages/tenant/package.json packages/tenant/package.json.bak
          
          sed -i '/"prepare":/d' packages/master/package.json
          sed -i '/"prepare":/d' packages/tenant/package.json
          
          npm ci --ignore-scripts
          
          mv packages/master/package.json.bak packages/master/package.json
          mv packages/tenant/package.json.bak packages/tenant/package.json

      - name: Build core dependencies first
        run: npx lerna run build --scope=@mbc-cqrs-serverless/core --scope=@mbc-cqrs-serverless/sequence --scope=@mbc-cqrs-serverless/task

      - name: Build remaining packages
        run: npx lerna run build --scope=@mbc-cqrs-serverless/tenant --scope=@mbc-cqrs-serverless/master --scope=@mbc-cqrs-serverless/cli --scope=@mbc-cqrs-serverless/ui-setting

      - name: Run Unit Tests
        run: npm run test

      - name: Unit Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests Reporter-${{ matrix.node-version }}
          path: report/unit.xml
          reporter: jest-junit
          fail-on-error: 'true'

  e2e_tests:
    name: E2e Test For Core package
    needs: unit_tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: |
          # 
          #
          #
          
          cp packages/master/package.json packages/master/package.json.bak
          cp packages/tenant/package.json packages/tenant/package.json.bak
          
          sed -i '/"prepare":/d' packages/master/package.json
          sed -i '/"prepare":/d' packages/tenant/package.json
          
          npm ci --ignore-scripts
          
          mv packages/master/package.json.bak packages/master/package.json
          mv packages/tenant/package.json.bak packages/tenant/package.json

      - name: Build core dependencies for testing
        run: npx lerna run build --scope=@mbc-cqrs-serverless/core --scope=@mbc-cqrs-serverless/sequence --scope=@mbc-cqrs-serverless/task

      - name: Build test
        run: npx lerna run build:test --scope=@mbc-cqrs-serverless/core

      - name: Run e2e Tests
        run: npx lerna run test:e2e --scope=@mbc-cqrs-serverless/core

      - uses: actions/upload-artifact@v4
        name: 'upload artifact'
        if: success() || failure()
        with:
          name: core-report-artifact-${{ matrix.node-version }}
          path: ./packages/core/test/scripts/*.out.txt

      - name: E2E Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: E2E Core Tests Reporter-${{ matrix.node-version }}
          path: report/e2e-core.xml
          reporter: jest-junit
          fail-on-error: 'true'

  publish:
    name: Publish
    needs: e2e_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: |
          # 
          #
          #
          
          cp packages/master/package.json packages/master/package.json.bak
          cp packages/tenant/package.json packages/tenant/package.json.bak
          
          sed -i '/"prepare":/d' packages/master/package.json
          sed -i '/"prepare":/d' packages/tenant/package.json
          
          npm ci --ignore-scripts
          
          mv packages/master/package.json.bak packages/master/package.json
          mv packages/tenant/package.json.bak packages/tenant/package.json

      - name: Build packages
        run: npx lerna run build

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: 'Version and publish beta version'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          npx lerna version prepatch --force-publish --yes

          npx lerna publish from-git --yes
